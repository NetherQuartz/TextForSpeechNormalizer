# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ "created" ]

jobs:
  build:

    name: Lint code and build wheel
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 build
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build wheel
      run: |
        unzip tsnorm/dictionary/dictionary.zip -d tsnorm/dictionary
        python -m build --wheel
    - name: Upload wheel to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheel
        path: dist/*.whl

  test:

    needs: build
    runs-on: ubuntu-latest
    name: Test on Python ${{ matrix.python_version }}

    strategy:
      matrix:
        python_version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python_version }}
    - name: Remove source code
      run: rm -rf tsnorm
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wheel
    - name: Install wheel and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install *.whl
        python -m pip install pytest
    - name: Run tests
      run: pytest

  deploy:

    needs: test
    runs-on: ubuntu-latest
    name: Deploy wheel to Releases
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
    - run: echo ${{ github.event_name }} ${{ github.event.action }}
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wheel
    - name: Add asset
      uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ./*.whl
          # asset_name: AssetName
          asset_content_type: application/zip
